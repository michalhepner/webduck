parameters:
    bin.provider: '%kernel.project_dir%/index.js'

services:
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    Webduck\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    Webduck\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    Webduck\Console\Command\:
        resource: '../src/Console/Command'
        tags: ['console.command']

    audits.default:
        class: Webduck\Audit\AuditCollection
        calls:
            - [ 'add', [ '@audit.console_errors' ] ]
            - [ 'add', [ '@audit.exception' ] ]
            - [ 'add', [ '@audit.page_size' ] ]
            - [ 'add', [ '@audit.resource_load' ] ]
            - [ 'add', [ '@audit.resource_size' ] ]
            - [ 'add', [ '@audit.security' ] ]
            - [ 'add', [ '@audit.violation' ] ]
        public: true

    audit.console_errors:
        alias: Webduck\Audit\ConsoleErrorsAudit

    audit.exception:
        alias: Webduck\Audit\ExceptionAudit

    audit.page_size:
        class: Webduck\Audit\PageSizeAudit
        arguments: [ 5242880 ]

    audit.resource_load:
        class: Webduck\Audit\ResourceLoadAudit
        arguments: [ 1000 ]

    audit.resource_size:
        class: Webduck\Audit\ResourceSizeAudit
        arguments: [ 1048576 ]

    audit.security:
        alias: Webduck\Audit\SecurityAudit

    audit.violation:
        alias: Webduck\Audit\ViolationAudit
